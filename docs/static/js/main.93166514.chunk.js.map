{"version":3,"sources":["components/AddCategory.js","helpers/GetGif.js","components/GifGridItem.js","components/GifGrid.js","Hooks/useFetchGif.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","category","type","value","onChange","target","getGif","categoria","a","console","log","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACE,sBAAMC,SAPa,SAACC,GACpBA,EAAEC,iBACFN,GAAc,SAACO,GAAD,OAAeL,GAAf,mBAA8BK,OAC5CJ,EAAc,KAId,SACE,uBACEK,KAAK,OACLC,MAAOP,EACPQ,SAdoB,SAACL,GACzBF,EAAcE,EAAEM,OAAOF,a,+BCPdG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACpBC,QAAQC,IAAI,CAAEH,cACRI,EAFc,iDAEkCC,UACpDL,GAHkB,gEAKDM,MAAMF,GALL,cAKdG,EALc,gBAMGA,EAAKC,OANR,uBAMZC,EANY,EAMZA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXlB,kBAcbM,GAda,4CAAH,sDCENO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,sBAAKc,UAAU,yCAAf,UACE,4BAAIJ,IACJ,qBAAKK,IAAKf,EAAKgB,IAAKN,QCFbO,EAAU,SAAC,GAAmB,IAAjBrB,EAAgB,EAAhBA,UACxB,ECFyB,SAACA,GAC1B,MAA0BZ,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAUA,OANAC,qBAAU,WACR1B,EAAOC,GAAW0B,MAAK,SAACd,GACtBY,EAAS,CAAEf,KAAMG,EAAKU,SAAS,SAEhC,CAACtB,IAEGuB,EDTmBI,CAAY3B,GAA9BS,EAAR,EAAQA,KAAMa,EAAd,EAAcA,QAEd,OADApB,QAAQC,IAAIM,GAEV,qCACE,6BAAKT,IACJsB,GAAW,8CACZ,qBAAKJ,UAAU,YAAf,SACGT,EAAKE,KAAI,SAACC,GACT,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aET1Be,EAAe,WAE1B,MAAoCxC,mBAAS,CAAC,qBAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAEA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG0C,EAAWlB,KAAI,SAACX,GAAD,OACd,cAAC,EAAD,CAAyBA,UAAWA,GAAtBA,Y,MCXxB8B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.93166514.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setcategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setcategories((category) => [inputValue, ...category]);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      ></input>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setcategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGif = async (categoria) => {\r\n  console.log({ categoria });\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    categoria\r\n  )}k&limit=10&api_key=jMDuYj6GldpTpeRW8wdp0k7xQRbUqLQi`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <p>{title}</p>\r\n      <img src={url} alt={title} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGif } from \"../Hooks/useFetchGif\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n  const { data, loading } = useFetchGif(categoria);\r\n  console.log(data);\r\n  return (\r\n    <>\r\n      <h3>{categoria}</h3>\r\n      {loading && <p>Cargando data</p>}\r\n      <div className=\"card-grid\">\r\n        {data.map((img) => {\r\n          return <GifGridItem key={img.id} {...img} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGif } from \"../helpers/GetGif\";\r\n\r\nexport const useFetchGif = (categoria) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGif(categoria).then((img) => {\r\n      setstate({ data: img, loading: false });\r\n    });\r\n  }, [categoria]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./AddCategory\";\r\nimport { GifGrid } from \"./GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  //   const categories = [\"Categoria uno\", \"Categoria 2\", \"Categoria 3\"];\r\n  const [categories, setcategories] = useState([\"The Walking dead\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setcategories={setcategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((categoria) => (\r\n          <GifGrid key={categoria} categoria={categoria} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifExpertApp } from \"./components/GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}